_schema-version: "3.2"
#namespace: cap.trello
ID: Trello-CAP-Timesheet
version: 0.0.1
modules:
  # A Node.JS application that routes all the requests in the MTA to the respective Module/Application.
  # Requires:
    # Trello-CAP-TimesheetManagement_html_repo_runtime (Memory to run the Approuter, see entitlements Application Runtime)
    # uaa_Trello-CAP-TimesheetManagement (to add authentication and authorization, generated by the “yo Fiori Project”)
    # The 2 entries inside the requires section of this module are 2 resources which are also present inside the “mta.yaml” file under the “resources” section.
- name: trello-cap-timesheet-approuter
  type: approuter.nodejs
  path: trello-cap-timesheet-approuter
  requires:
  - name: Trello-CAP-Timesheet_html_repo_runtime
  - name: uaa_Trello-CAP-Timesheet
  parameters:
    disk-quota: 256M
    memory: 256M

  # This module can be used to deploy your content to the HTML5 Application Repository.

  # Requires:
  # Trello-CAP-TimesheetManagement_html_repo_host (since it is required) which is declared inside the “resources” section to host the deployer application during the deployment process. 
  # Once the deployment is finished it will stop the ui-deployer module.

  # HTML5 Application Repository:
  # “HTML5 Application Repository allows application developers to manage the lifecycle of their HTML5 applications. 
  # In runtime, the repository enables the consuming application, typically the application router, to access HTML5 application static content in a secure and efficient manner.“

  # ~ SAP Help Documentation
  # https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/f8520f572a6445a7bfaff4a1bbcbe60a.html

  # In case you want to deploy updates for your UI5 application, and you do not want to use the ui-deployer any longer, since it takes a while, you can also use the “CF HTML5 Applications Repository CLI Plugin”. Which allows you to quickly deploy your new features without the usage of the ui-deployer. Do not forget to build you project before the deployment.
  # https://sap.github.io/cf-html5-apps-repo-cli-plugin/

- name: Trello-CAP-Timesheet_ui_deployer
  type: com.sap.application.content
  path: .
  requires:
  - name: Trello-CAP-Timesheet_html_repo_host
    parameters:
      content-target: true
  build-parameters:
    build-result: resources
    requires:
    - artifacts:
      - TimesheetManager-content.zip
      name: TimesheetManager
      target-path: resources/

  # The HTML5 UI Module which holds the path to the UI5 app project inside the MTA.
- name: TimesheetManager
  type: html5
  path: TimesheetManager
  build-parameters:
    builder: custom
    commands:
    - npm run build
    supported-platforms: []
resources:
  # A resource which provides runtime memory for the applications.
- name: Trello-CAP-Timesheet_html_repo_runtime
  type: org.cloudfoundry.managed-service
  parameters:
    service: html5-apps-repo
    service-plan: app-runtime

  # Offers the possibility to deploy applications to the Cloud Foundry space.
- name: Trello-CAP-Timesheet_html_repo_host
  type: org.cloudfoundry.managed-service
  parameters:
    service: html5-apps-repo
    service-plan: app-host

  # The XSUAA (Authorization & Trust Management) service allows you to use authentication and authorization inside your applications. 
  # At this very moment the Approuter is using this service and will later on send the authorization access tokens along to the requested modules 
  # to ensure authenticated and authorized access to the appropriate resources.

  # The scopes and role-templates can be configured inside the “xs-security.json” file, which is present in the root directory of the MTA-project.
- name: uaa_Trello-CAP-Timesheet
  type: org.cloudfoundry.managed-service
  parameters:
    path: ./xs-security.json
    service: xsuaa
    service-name: Trello-CAP-Timesheet-xsuaa-service
    service-plan: application
build-parameters:
  before-all:
  - builder: custom
    commands:
    - npm install
